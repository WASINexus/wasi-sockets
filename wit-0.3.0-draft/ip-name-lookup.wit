@since(version = 0.3.0)
interface ip-name-lookup {
    @since(version = 0.3.0)
    use network.{network, error-code, ip-address};

    /// Resolve an internet host name to a list of IP addresses.
    ///
    /// Unicode domain names are automatically converted to ASCII using IDNA encoding.
    /// If the input is an IP address string, the address is parsed and returned
    /// as-is without making any external requests.
    ///
    /// See the wasi-socket proposal README.md for a comparison with getaddrinfo.
    ///
    /// This function returns a stream that can be used
    /// to (asynchronously) fetch the resolved IP addresses.
    /// Addresses are fetched in connection order preference.
    /// This stream will never contain IPv4-mapped IPv6 addresses.
    ///
    /// The returned future will resolve to an error code in case of failure.
    /// It will resolve to success once the returned stream is exhausted.
    ///
    /// # Typical errors
    /// - `invalid-argument`:           `name` is a syntactically invalid domain name or IP address.
    /// - `name-unresolvable`:          Name does not exist or has no suitable associated IP addresses. (EAI_NONAME, EAI_NODATA, EAI_ADDRFAMILY)
    /// - `temporary-resolver-failure`: A temporary failure in name resolution occurred. (EAI_AGAIN)
    /// - `permanent-resolver-failure`: A permanent failure in name resolution occurred. (EAI_FAIL)
    ///
    /// # References:
    /// - <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getaddrinfo.html>
    /// - <https://man7.org/linux/man-pages/man3/getaddrinfo.3.html>
    /// - <https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo>
    /// - <https://man.freebsd.org/cgi/man.cgi?query=getaddrinfo&sektion=3>
    @since(version = 0.3.0)
    resolve-addresses: func(network: borrow<network>, name: string) -> tuple<stream<ip-address>, future<result<_, error-code>>>;
}
